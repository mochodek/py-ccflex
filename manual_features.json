{
  "manual_string_counting_features": [
    {
      "name": "lbracket",
      "string": ["("]
    },
    {
      "name": "rbracket",
      "string": [")"]
    },
    {
      "name": "lcbracket",
      "string": ["{"]
    },
    {
      "name": "rcbracket",
      "string": ["}"]
    },
    {
      "name": "lsbracket",
      "string": ["["]
    },
    {
      "name": "rsbracket",
      "string": ["]"]
    },
    {
      "name": "semicolon",
      "string": [";"]
    },
    {
      "name": "colon",
      "string": [":"]
    },
    {
      "name": "comma",
      "string": [","]
    },
    {
      "name": "minus",
      "string": ["-"]
    },
    {
      "name": "plus",
      "string": ["-"]
    },
    {
      "name": "dot",
      "string": ["."]
    },
    {
      "name": "slash",
      "string": ["/"]
    },
    {
      "name": "bslash",
      "string": ["\\"]
    },
    {
      "name": "question",
      "string": ["?"]
    },
    {
      "name": "quote",
      "string": ["\""]
    },
    {
      "name": "sqoute",
      "string": ["'"]
    },
    {
      "name": "star",
      "string": ["*"]
    },
    {
      "name": "amp",
      "string": ["&"]
    },
    {
      "name": "piple",
      "string": ["|"]
    },
    {
      "name": "at",
      "string": ["@"]
    },
    {
      "name": "dollar",
      "string": ["$"]
    },
    {
      "name": "space",
      "string": [" "]
    },
    {
      "name": "hash",
      "string": ["#"]
    },
    {
      "name": "assignment",
      "string": ["="]
    },
    {
      "name": "numeric_int",
      "string": ["int"]
    },
    {
      "name": "numeric_long",
      "string": ["long"]
    },
    {
      "name": "numeric_signed",
      "string": ["signed"]
    },    
    {
      "name": "text_string",
      "string": ["string"]
    },
    {
      "name": "const",
      "string": ["const"]
    },
    {
      "name": "inClass",
      "string": ["::"]
    },
    {
      "name": "underscore",
      "string": ["_"]
    },
    {
      "name": "equal",
      "string": ["=="]
    },
    {
      "name": "block_comment_start",
      "string": ["/*"]
    },
    {
      "name": "block_comment_end",
      "string": ["*/"]
    }
  ],
  "manual_whole_word_counting_features": [
    {
      "name": "for",
      "string": ["for"]
    },
    {
      "name": "if",
      "string": ["if"]
    },
    {
      "name": "case",
      "string": ["case"]
    },
    {
      "name": "exception",
      "string": ["exception"]
    },
    {
      "name": "class",
      "string": ["class"]
    },
    {
      "name": "while",
      "string": ["while"]
    },
    {
      "name": "try",
      "string": ["try"]
    },
    {
      "name": "catch",
      "string": ["catch"]
    },
    {
      "name": "virtual",
      "string": ["virtual"]
    },
    {
      "name": "static",
      "string": ["static"]
    },
    {
      "name": "void",
      "string": ["void"]
    },
    {
      "name": "bool",
      "string": ["bool"]
    },
    {
      "name": "new",
      "string": ["new"]
    },
    {
      "name": "public",
      "string": ["public"]
    },
    {
      "name": "private",
      "string": ["private"]
    },
    {
      "name": "key_new",
      "string": ["new"]
    },
    {
      "name": "expect",
      "string": ["expect"]
    }
  ]
}


