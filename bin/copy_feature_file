#!/usr/bin/env python

# Copies a feature file

import argparse
import logging
import os
import shutil

from common.configuration import ConfigurationHandler
from common.workspace import WorkspaceHandler

logger = logging.getLogger('pyccflex')
logger.setLevel(logging.DEBUG)
ch = logging.StreamHandler()
ch.setLevel(logging.INFO)
logger.addHandler(ch)

if __name__ == '__main__':

    logger.info("\n#### Running: {}".format(__file__))

    parser = argparse.ArgumentParser()
    parser.add_argument("from_file_name",
                        help="Name of the features file to copy", type=str)
    parser.add_argument("to_file_name",
                        help="Name of the output file", type=str)
    parser.add_argument("--locations_config", help="Path to locations configuration file",
                        type=str, required=False, default="./locations.json")
    args = vars(parser.parse_args())
    logger.info("Run parameters: {}".format(str(args)))

    locations_file_path = args['locations_config']
    from_file_name = args['from_file_name']
    to_file_name = args['to_file_name']

    try:
        config = ConfigurationHandler(locations_file_path)
    except Exception as e:
        logger.error("Couldn't load configuration file {}".format(locations_file_path))
        exit(1)

    workspace_dir_conf = config.get('workspace_dir', None)
    workspace_dir_path = workspace_dir_conf.get("path", "")
    workspace_dir = WorkspaceHandler(workspace_dir_path)

    from_file = workspace_dir.get_processing_file_path(from_file_name)
    to_file = workspace_dir.get_processing_file_path(to_file_name)

    print(from_file)
    print(to_file)
    shutil.copy(from_file, to_file)

    logger.info(">>> Copied the file {} to {}".format(from_file, to_file))
