#!/usr/bin/env python

# Creates a temporary folder

import argparse
import logging
import os

from common.configuration import ConfigurationHandler
from common.storage import FileStorageHandler

logger = logging.getLogger('pyccflex')
logger.setLevel(logging.DEBUG)
ch = logging.StreamHandler()
ch.setLevel(logging.INFO)
logger.addHandler(ch)

if __name__ == '__main__':

    logger.info("#### Running: {} ####".format(__file__))

    parser = argparse.ArgumentParser()
    parser.add_argument("--locations_config", help="Path to locations file", type=str, required=False)
    args = vars(parser.parse_args())

    locations_file_path = "./locations.json" if args['locations_config'] is None else args['locations_config']

    try:
        config = ConfigurationHandler(locations_file_path)
    except Exception as e:
        logger.error("Couldn't load configuration file {}".format(locations_file_path))
        exit(1)

    # create storage folder
    storage_dir_conf = config.get('storage_dir', None)
    if storage_dir_conf is None:
        logger.info("Storage folder is required, please update your configuration file")
        exit(1)

    storage_dir_conf = config.get('storage_dir', None)
    storage_dir_path = storage_dir_conf.get("path", "")
    storage_dir = FileStorageHandler(storage_dir_path)

    if os.path.exists(storage_dir_path) and storage_dir_conf.get("erase", False):
        storage_dir.remove_storage_dir()
    storage_dir.create_storage_dir()







